module ch_output_module
(
	input clk,
	input sub_clk,
	input subsub_clk,
	input rstn,
	input [15:0] duty_cycle,
	input [15:0] delay_set,
	output ch_output
);
	reg ch_output_reg;
	reg [15:0] subsub_count;
	//reg cl_flag;
	
/* 	always @(posedge sub_clk or negedge rstn) begin
		if (!rstn) begin
			cl_flag <= 0;
		end else begin
			cl_flag <= 1;
		end
	end */
	
	always @(posedge sub_clk or posedge subsub_clk or negedge rstn) begin
		if ((!rstn or sub_clk) & (delay_set != 0) ) begin
			ch_output_reg <= 0;
			subsub_count <= 0;
		end else if ((!rstn or sub_clk) & (delay_set == 0) )
			ch_output_reg <= 1;
			subsub_count <= 0;
		end else if (subsub_count < delay_set ) begin
			subsub_count <= subsub_count + 1;
			ch_output_reg <= 0;
		end else if (subsub_count < (delay_set + duty_cycle) ) begin 
			subsub_count <= subsub_count + 1;
			ch_output_reg <= 1;
		end else if (subsub_count >= (delay_set + duty_cycle) ) begin 
			subsub_count <= subsub_count + 1;
			ch_output_reg <= 0;
		end
	end
	
	assign ch_output = ch_output_reg;
	
endmodule